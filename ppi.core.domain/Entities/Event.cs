//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PPI.Core.Domain.Entities
{
    using System;
    using System.Collections.Generic;
    
    public partial class Event
    {
        public Event()
        {
            this.Emails = new HashSet<Email>();
            this.EventPracticeReports = new HashSet<EventPracticeReport>();
            this.PersonEvent = new HashSet<PersonEvent>();
            this.PersonPracticeReport = new HashSet<PersonPracticeReport>();
        }
    
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public int EventTypeId { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<System.DateTime> EndDate { get; set; }
        public Nullable<System.DateTime> ReviewDate { get; set; }
        public int EventStatusId { get; set; }
        public System.DateTime CreateDate { get; set; }
        public Nullable<int> Placement { get; set; }
        public Nullable<bool> Billable { get; set; }
        public Nullable<int> ProgramSitesId { get; set; }
        public Nullable<int> SurveyTypeId { get; set; }
    
        public virtual ICollection<Email> Emails { get; set; }
        public virtual EventStatus EventStatus { get; set; }
        public virtual EventType EventType { get; set; }
        public virtual ProgramSite ProgramSite { get; set; }
        public virtual SurveyType SurveyType { get; set; }
        public virtual ICollection<EventPracticeReport> EventPracticeReports { get; set; }
        public virtual ICollection<PersonEvent> PersonEvent { get; set; }
        public virtual ICollection<PersonPracticeReport> PersonPracticeReport { get; set; }

        //Get yes or no for Billable non-billable
        public String getBillableYesNo() {
            String s = "";
            if (this.Billable == null)
                s = "No";
            else { 
                if ((Boolean)this.Billable)
                    s = "Yes";
                else
                    s = "No";
            }
            return s;
        }

    }
}

@model PPI.Core.Web.Models.AmsaReports.Email.AMSAEmail

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit</h2>

<div class="main-box clearfix">
    <div class="main-box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2>AMSAEmail Edit</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DefaultFrom, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DefaultFrom, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DefaultFrom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Introduction, new { @class = "form-control ckeditor", @rows = "5" })
                        @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Closing, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Closing, new { @class = "form-control ckeditor", @rows = "5" } )
                        @Html.ValidationMessageFor(model => model.Closing, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-lg-12 col-md-12">
                        @Html.ActionLink("Back to List", "Setup", null, new { @class = "btn btn-default" })
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/Plugin/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.config.toolbar = [
    ['Bold', 'Italic', 'Underline', 'StrikeThrough', '-', 'TextColor', 'FontSize', '-', 'NumberedList', 'BulletedList', '-', 'Undo', 'Redo', '-', 'Cut', 'Copy', 'Paste', '-', 'Outdent', 'Indent', '-', 'spellchecker'],
        ];
    </script>

}
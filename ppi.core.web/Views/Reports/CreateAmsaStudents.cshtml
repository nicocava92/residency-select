@model PPI.Core.Web.Models.AmsaReports.ViewModel.AMSAParticipantStudentDataViewModel

@{
    ViewBag.Title = "Add new Amsa Report Student Data";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div class="main-box clearfix">
    <div class="main-box-body">
        <h2>Add Student Data</h2>
        <hr />
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.Events, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.idSelectedEvent, Model.Events, new { @class = "form-control", @id = "EventDepartmentId", @onChange = "getSpeciality()" })
                        @Html.ValidationMessageFor(model => model.Events, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*
                <div class="form-group">
                    @Html.LabelFor(model => model.CandidateID, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CandidateID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CandidateID)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationID, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ApplicationID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApplicationID)
                    </div>
                </div>
                *@
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.FirstName, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.FirstName)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.LastName, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.LastName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.PersonId, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.PersonId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.PersonId)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.RegistrationDate, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.RegistrationDate, new { htmlAttributes = new { @class = "form-control datepicker cursor_pointer", data_date_format = "mm-dd-yyyy" } })
                        @Html.ValidationMessageFor(model => model.Data.RegistrationDate)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.CompletionDate, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.CompletionDate, new { htmlAttributes = new { @class = "form-control datepicker cursor_pointer", data_date_format = "mm-dd-yyyy" } })
                        @Html.ValidationMessageFor(model => model.Data.CompletionDate)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Ambition, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Ambition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Ambition)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Assertiveness, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Assertiveness, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Assertiveness)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Awareness, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Awareness, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Awareness)
                    </div>
                </div>    
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Composure, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Composure, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Composure)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Conceptual, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Conceptual, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Conceptual)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Cooperativeness, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Cooperativeness, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Cooperativeness)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Drive, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Drive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Drive)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Flexibility, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Flexibility, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Flexibility)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Humility, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Humility, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Humility)
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Liveliness, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Liveliness, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Liveliness)
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Mastery, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Mastery, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Mastery)
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Positivity, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Positivity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Positivity)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Power, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Power, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Power)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Sensitivity, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Sensitivity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Sensitivity)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Stanine_Structure, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Data.Stanine_Structure, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Data.Stanine_Structure)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Data.Status, htmlAttributes: new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Data.Status, Model.Status, new { @class = "form-control", @id = "EventDepartmentId", @onChange = "getSpeciality()" })
                        @Html.ValidationMessageFor(model => model.Data.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*
                <div class="form-group">
                    @Html.LabelFor(model => model.ClientName, new { @class = "control-label col-md-2 bold" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ClientName)
                    </div>
                </div>
                *@

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success btn200" />
                    </div>
                </div>

            </div>
        }

    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker(
               {
                   autoclose: true
               });
        });

    </script>
}
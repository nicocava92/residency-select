@model PPI.Core.Web.Models.OESReviewViewModel
@using PPI.Core.Web.HtmlHelpers
@{
    ViewBag.Title = "Review";
    Layout = "~/Views/Shared/_LayoutAdminOESSetup.cshtml";
    var Message = string.Empty;
}

@using (Html.BeginForm("OESReview", "OrderForms", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    <div>
        <!--OES complete PopUP-->
        <div tabindex="-1" class="modal fade" id="uploadStatsDlg" role="dialog" aria-hidden="true" aria-labelledby="uploadStatsDlgLabel" style="display: none;">
            <div class="modal-dialog">
                <div class="modal-content modal-sm" style="width:700px">
                    <div class="modal-header">
                        <button class="close" aria-hidden="true" type="button" data-dismiss="modal">×</button>
                        <h4></h4>
                    </div>
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="modal-body">
                            <p>
                                You are about to make this Event active. Do you wish to continue?
                            </p>
                        </div>
                    }
                    else
                    {
                        if (Model.Setup.Billable == true)
                        {
                            Message = "You are about to make this Event active. Do you wish to continue?";
                        }
                        else if (Model.Setup.Billable == false)
                        {
                            if (Model.Setup.EventNotBillableReason != null && Model.Setup.EventNotBillableReason.Name.ToUpper() == "VALIDITY GENERALIZATION")
                            {
                                Message = "You are about to make this Event active. Do you wish to continue?";
                            }
                            else
                            {
                                Message = "You are about to submit this Event set up request to be approved. Do you wish to continue?";
                            }
                        }
                    }
                    <div class="modal-body">
                        <p>
                            @Message
                        </p>
                    </div>
                    <div class="modal-footer">
                        <input type="button" id="cancelButton" value="Cancel" class="btn btn-default" />
                        <button type="submit" class="btn btn-success" title="OK">OK</button>

                    </div>
                </div>
            </div>
        </div>
        <!--end PopUp -->
    </div>
    <div class="main-box clearfix">
        <div class="main-box-body">
            <h2>Review</h2>
            <hr />
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.OESSetupID)
            @Html.ValidationSummary(true)

            <div class="col-lg-12">


                <div class="col-md-6">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.Name, htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.OrganizationId, "Organization", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.Organization.OrganizationName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.SiteId, "Department", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.Site.SiteName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.ProgramId, "Speciality", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.Program.ProgramName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.Description, "Event Description", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.AspNetUsers.UserName, "Order By", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.AspNetUsers.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.DefaultEmail, "Default Email Address", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.DefaultEmail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.Billable, "Billable Event", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.Label("test", Model.Setup.Billable.Value == true ? "Yes" : "No", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        @if (!Model.Setup.Billable.Value)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Setup.NotBillableReasonId, "Reason", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Setup.EventNotBillableReason.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>

                            if (Model.Setup.EventNotBillableReason != null && Model.Setup.EventNotBillableReason.Name.ToUpper() == "VALIDITY GENERALIZATION")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Setup.VGSpecialtyId, "VG Speciality", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Setup.EventVGSpecialty.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="form-group" style="display:none;" id="divOppertunity">
                                    @Html.LabelFor(model => model.Setup.BDOpportunity, "Opportunity", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                                    <div class="col-md-7">
                                        @Html.EditorFor(model => model.Setup.BDOpportunity, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            }
                        }

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.EventTypeId, "Event Type", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.EventType.NameResx.ResxValues.FirstOrDefault(m => m.CultureId == 1).Value, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.SurveyTypeId, "Survey Type", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.SurveyType.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.CompositeRequired, "Composite Required?", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.Label("test", Model.Setup.CompositeRequired.Value == true ? "Yes" : "No", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.JETRequired, "JET Required?", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.Label("test", Model.Setup.JETRequired.Value == true ? "Yes" : "No", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.NoOfParticipants, "Total Number of Participants", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.Setup.NoOfParticipants, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        @if (Model.Setup.SurveyType.Name != "J3P")
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.ReportsSelected, "Reports", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.ReportsSelected, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            @Html.LabelFor(model => model.ReviewDate, "Event / Review Date", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.ReviewDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StartDate, "Start Date", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EndDate, "End Date", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.JETNeedByDate, "JET Need By Date", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.JETNeedByDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CompositeNeedByDate, "COMPOSITE Need By Date", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @Html.EditorFor(model => model.CompositeNeedByDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.Site.BrandingLogo, "Customer Logo", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @if (Model.Setup.Site.BrandingLogo != null)
                                {
                                    <img src="data:image;base64,@System.Convert.ToBase64String(Model.Setup.Site.BrandingLogo)" height="70px" width="250px" />
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.Site.BrandingColor, "Title Color", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                <div style="background-color:@Model.Setup.Site.BrandingColor; padding:5px 10px; margin-top:3px;">
                                    @Html.DisplayFor(modelItem => Model.Setup.Site.BrandingColor)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Setup.Site.BrandingBackground, "Report Design Image", htmlAttributes: new { @class = "control-label col-md-5 bold" })
                            <div class="col-md-7">
                                @if (Model.Setup.Site.BrandingBackground != null)
                                {
                                    <img src="data:image;base64,@System.Convert.ToBase64String(Model.Setup.Site.BrandingBackground)" height="70px" width="250px" />
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <a href="/OrderForms/OESSchedule?ID=@Model.OESSetupID&isReadOnly=True" class="btn btn-default btn200 mobile_full_width_btn btn-text-gray" title="Previous"><span class="fa fa-caret-left" aria-hidden="true"></span> Previous</a>

                                <input type="button" value="Complete" id="btnOESCompltd" class="btn btn-success btn200" onclick="javascript: return SHowPopup();" />
                            </div>
                        </div>

                    </div>
                </div>


            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function (e) {
        $("#setupProjectli").addClass("complete");
        $("#scheduleProjectli").addClass("complete");
        $("#reviewProjectli").addClass("active");
    });

    function SHowPopup() {
        if ($('#uploadStatsDlg').length > 0) {
            $('#uploadStatsDlg').modal('show');
        }
    }

    $("#cancelButton").click(function () {
        $('#uploadStatsDlg').modal('hide');
        return false;
    });
</script>

